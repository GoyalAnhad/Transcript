def getRepositoryUsername() {
    return hasProperty('mavenUsername') ? mavenUsername : ""
}
        
def getRepositoryPassword() {
    return hasProperty('mavenPassword') ? mavenPassword : ""
}

allprojects {
    group = 'edu.cmu.sphinx'
    version = '5prealpha-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    
    // Use the new 'publishing' block instead of 'uploadArchives'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                // Attach sources and javadoc if you want
                artifact packageSources {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
            }
        }
        repositories {
            maven {
                // Use snapshots repository if version ends with SNAPSHOT,
                // otherwise use the staging repository.
                url version.endsWith("SNAPSHOT") ? 
                     uri("https://oss.sonatype.org/content/repositories/snapshots/") : 
                     uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }
    }
    
    repositories {
         mavenCentral()
    }

    compileJava.options.encoding = 'UTF-8'
    javadoc.options.encoding = 'UTF-8'
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }
    
    task packageSources(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives packageSources, javadocJar
    }
}
